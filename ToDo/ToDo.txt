# Re-implement Delta_E_CMC and Delta_E_2000 according to Lindbloom.

# Document all functions. Start always with function name.

# type Color3 struct {
	X, Y, Z float64
}

func DeltaE(l1, a1, b1, l2, a2, b2 float64) (delta float64) {
--> func DeltaE(c1, c2 Color3) (delta float64) {

# scaled uint8, uint16 versions of the library to use standard image/color Color interface !!

# rewrite uint8 versions according to this example:
// Adobe2XYZ converts from Adobe RGB with D65 illuminator to CIE XYZ.
func Adobe2XYZ(r, g, b uint8) (x, y, z uint8) {
    rr, gg, bb := int32(r), int32(g), int32(b)
    xx := (37796*rr + 12160*gg + 12332*bb + 1<<15) >> 16
    yy := (19488*rr + 41113*gg + 4933*bb + 1<<15) >> 16
    zz := (1771*rr + 4632*gg + 64953*bb + 1<<15) >> 16
    if zz > 255 {
        zz = 255
    }
    return uint8(xx), uint8(yy), uint8(zz)
}


    if xx > 255 {
        xx = 255
    }
    if yy > 255 {
        yy = 255
    }
    if zz > 255 {
        zz = 255
    }
    return uint8(xx), uint8(yy), uint8(zz)


    if rr > 255 {
        rr = 255
    }
    if gg > 255 {
        gg = 255
    }
    if bb > 255 {
        bb = 255
    }
    r, g, b = uint8(rr), uint8(gg), uint8(bb)
return


	rr, gg, bb := int32(r), int32(g), int32(b)


	xx, yy, zz := int32(x), int32(y), int32(z)
